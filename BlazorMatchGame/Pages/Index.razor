@page "/"

<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @foreach(var animal in shuffledAnimals)
            {
                <div class="row-3">
                    <button @onclick="@(()=>ButtonClick(animal))" type="button" class="btn btn-outline-dark">
                        <h1>@animal</h1>
                    </button>
                </div>
            }
    </div>
</div>

@code {

    List<string> animalEmoji = new List<string>()
    {
        "🐶", "🐶",
        "🐹", "🐹",
        "🦁", "🦁",
        "🦆", "🦆",
        "🦄", "🦄",
        "🐥", "🐥",
        "🐔", "🐔",
        "🐷", "🐷",
    };

    List<string> shuffledAnimals = new List<string>();
    protected override void OnInitialized()
    {
        SetUpGame();
    }

    public void SetUpGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();
    }

    string lastAnimalFound = string.Empty;

    private void ButtonClick(string animal)
    {
        if(lastAnimalFound == string.Empty)
        {
            //first selection of the pair. Remember it.
            lastAnimalFound = animal;
        } else if(lastAnimalFound==animal)
        {
            //match found! Reset for next pair
            lastAnimalFound = string.Empty;

            //replace found animals with empty string to hide them
            shuffledAnimals = shuffledAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();
        }
        else
        {
            //user selected a pair that dont match
            //reset selection
            lastAnimalFound = string.Empty;
        }
    }
}
